- [] Discussion des résultats de Jean-Pacifique : problèmes ?
- [OK] Faire marcher le Parser
- [] Faire un nouveau compilateur newOz -> Oz

Points de réflexion :
Oz très dynamique : quid de ça pour newOz ? Poseront pe plus de problèmes
Écrire des programmes en newOz pour tester, sentir les problèmes, exemples variés sur concepts différents (ex des cours mais pas seulement)
(Lift control, monitors, bounded buffers, gate makers, locks et transaction managers, ...) Récupérer des notes de cours de plusieurs sources


Réunion du 10/11 :
[OK] Parser à faire run
- Comment traduction de grands programmes en newOz fonctionne ? (Guetter les problèmes, penser meta)
Mardi 17/11 à 16h

- Avoir un ";" à la fin d'une ligne de déclaration de variable est autorisé, mais pas ailleurs. Pas très justifiable à mon sens, si l'intention était d'avoir un sentiment familier pour les users de Java/Scala
- Le caractère ' devant certains appels de fonctions et pas d'autres n'est pas très intuitif, et surtout TRES mal géré par le parser (OutOfMemoryError). Private methods=Uppercase, public=atomLisp. Car le Parser est stateless => ça pourra être corrigé avec le nouveau compilateur
- "import Browser('browse:browse)" => should be written "import Browser.'browse as browse", feels more modern/python-like and not hard to do in compiler, 1<>1 equivalency


Réunion du 17/11 :
Lundi 30/11 14h : compilateur qui fonctionne

Unit : equivalent de true|false quand la valeur n'a aucune importance
On attend une tâche en concurrence

Prepare : quand on fait un calcul pour créer un functor - lié à require
-> voir computed functors dans docu de Oz


Réunion du 30/11 :
Nouveau pan du mémoire : utiliser newOz dans LINFO1104 -> les étudiants feraient un travail en newOz et évalueraient la syntaxe
[] - Faire un compilateur complet et fonctionnel
[] - Faire un tutoriel de la syntaxe pour les TPs

Une réunion sera organisée avec Martin Henz (qui a conçu la syntaxe)

Utiliser l'article sur l'histoire de Oz comme base pour le poster de la présentation du 4/12
See Poster.txt



Réunion du 03/03 :
Idées :
- Instructions spéciales (utilisant % par exemple) : pour afficher le contenu de la scope actuelle par exemple. Utile pour débugger/apprentissage
- Sous quel format ship l'exécutable ? Truly executable .jar ? (only works on Unix, otherwise standard .jar comand, which is rly ugly)

Question :
[] See this code : do we want to keep this mechanic of "covering" variable names in the scope ? vs. educational benefit of learning about good naming conventions ?
declare A=1 in => en fait un alias de local pour trick l'interactive
    proc{MyProc A}
        {Browse A}
    end
    {MyProc A}
[] How to invert a boolean value (!bool equivalent) ? => can be added but !! used in case to keep the variable name used in external scope
[] attributes are private in Oz ?
[] what is PROP ? (properties vs attributes ?)

Kim Mens
Hélène Verhaeghe
Nicolas Laurent
Martin Hens